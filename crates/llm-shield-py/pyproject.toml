[build-system]
requires = ["maturin>=1.7,<2.0"]
build-backend = "maturin"

[project]
name = "llm-shield"
version = "0.1.0"
description = "Enterprise-grade LLM security toolkit - Python bindings for Rust implementation"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [
    { name = "LLM Shield Contributors", email = "support@globalbusinessadvisors.co" }
]
keywords = ["llm", "security", "prompt-injection", "guardrails", "ml-safety", "pii-detection"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Rust",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "typing-extensions>=4.0.0; python_version < '3.11'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4",
    "pytest-asyncio>=0.21",
    "pytest-benchmark>=4.0",
    "pytest-cov>=4.1",
    "pytest-timeout>=2.1",
    "pytest-xdist>=3.3",
    "hypothesis>=6.92",
    "mypy>=1.7",
    "black>=23.11",
    "ruff>=0.1",
    "isort>=5.12",
]
docs = [
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.2",
    "sphinx-autodoc-typehints>=1.23",
]
all = ["llm-shield[dev,docs]"]

[project.urls]
Homepage = "https://github.com/globalbusinessadvisors/llm-shield-rs"
Repository = "https://github.com/globalbusinessadvisors/llm-shield-rs"
Documentation = "https://llm-shield.readthedocs.io"
Issues = "https://github.com/globalbusinessadvisors/llm-shield-rs/issues"

[tool.maturin]
module-name = "llm_shield._internal"
bindings = "pyo3"
features = ["pyo3/extension-module"]
python-source = "python"
strip = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["python/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
timeout = 300
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmarks",
]

[tool.coverage.run]
source = ["llm_shield"]
omit = ["*/tests/*"]

[tool.coverage.report]
precision = 2
show_missing = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311", "py312", "py313"]

[tool.ruff]
line-length = 100
target-version = "py38"
select = ["E", "F", "I", "N", "W", "UP"]

[tool.isort]
profile = "black"
line_length = 100
